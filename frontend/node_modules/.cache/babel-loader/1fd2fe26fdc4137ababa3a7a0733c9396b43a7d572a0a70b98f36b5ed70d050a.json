{"ast":null,"code":"import { a as e } from \"./chunk-NJN3EAOM.mjs\";\nvar r = class t extends e {\n  constructor(i) {\n    super(), this.identifier = i;\n  }\n  serialize(i) {\n    i.serializeStr(this.identifier);\n  }\n  static deserialize(i) {\n    let s = i.deserializeStr();\n    return new t(s);\n  }\n};\nexport { r as a };","map":{"version":3,"names":["r","t","e","constructor","i","identifier","serialize","serializeStr","deserialize","s","deserializeStr","a"],"sources":["C:\\Users\\ROHAN\\Desktop\\projects\\nft-marketplace\\frontend\\node_modules\\@aptos-labs\\ts-sdk\\src\\transactions\\instances\\identifier.ts"],"sourcesContent":["// Copyright Â© Aptos Foundation\n// SPDX-License-Identifier: Apache-2.0\n\nimport { Deserializer } from \"../../bcs/deserializer\";\nimport { Serializable, Serializer } from \"../../bcs/serializer\";\n\n/**\n * Represents an Identifier that can be serialized and deserialized.\n * This class is used to denote the module \"name\" in \"ModuleId\" and\n * the \"function name\" in \"EntryFunction\".\n *\n * @extends Serializable\n * @group Implementation\n * @category Transactions\n */\nexport class Identifier extends Serializable {\n  public identifier: string;\n\n  /**\n   * Creates an instance of the class with a specified identifier.\n   *\n   * @param identifier - The unique identifier for the instance.\n   * @group Implementation\n   * @category Transactions\n   */\n  constructor(identifier: string) {\n    super();\n    this.identifier = identifier;\n  }\n\n  /**\n   * Serializes the identifier of the current instance using the provided serializer.\n   *\n   * @param serializer - The serializer instance used to perform the serialization.\n   * @group Implementation\n   * @category Transactions\n   */\n  public serialize(serializer: Serializer): void {\n    serializer.serializeStr(this.identifier);\n  }\n\n  /**\n   * Deserializes an identifier from the provided deserializer.\n   * This function is useful for reconstructing an Identifier object from a serialized format.\n   *\n   * @param deserializer - The deserializer instance used to read the serialized data.\n   * @group Implementation\n   * @category Transactions\n   */\n  static deserialize(deserializer: Deserializer): Identifier {\n    const identifier = deserializer.deserializeStr();\n    return new Identifier(identifier);\n  }\n}\n"],"mappings":";AAeO,IAAMA,CAAA,GAAN,MAAMC,CAAA,SAAmBC,CAAa;EAU3CC,YAAYC,CAAA,EAAoB;IAC9B,MAAM,GACN,KAAKC,UAAA,GAAaD,CACpB;EAAA;EASOE,UAAUF,CAAA,EAA8B;IAC7CA,CAAA,CAAWG,YAAA,CAAa,KAAKF,UAAU,CACzC;EAAA;EAUA,OAAOG,YAAYJ,CAAA,EAAwC;IACzD,IAAMK,CAAA,GAAaL,CAAA,CAAaM,cAAA,CAAe;IAC/C,OAAO,IAAIT,CAAA,CAAWQ,CAAU,CAClC;EAAA;AACF;AAAA,SAAAT,CAAA,IAAAW,CAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}