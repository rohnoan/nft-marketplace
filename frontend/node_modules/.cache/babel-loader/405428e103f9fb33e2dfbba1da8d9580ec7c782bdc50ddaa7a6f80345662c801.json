{"ast":null,"code":"import { b as c } from \"./chunk-RGKRCZ36.mjs\";\nimport { sha3_256 as n } from \"@noble/hashes/sha3\";\nvar d = (e, r) => {\n    let t = e.bcsToBytes(),\n      s = typeof r == \"string\" ? Buffer.from(r, \"utf8\") : r,\n      o = new Uint8Array([...t, ...s, 254]);\n    return new c(n(o));\n  },\n  f = (e, r) => {\n    let t = e.bcsToBytes(),\n      s = typeof r == \"string\" ? Buffer.from(r, \"utf8\") : r,\n      o = new Uint8Array([...t, ...s, 255]);\n    return new c(n(o));\n  },\n  a = (e, r, t) => {\n    let s = `${r}::${t}`;\n    return d(e, s);\n  };\nexport { d as a, f as b, a as c };","map":{"version":3,"names":["sha3_256","n","d","createObjectAddress","e","r","t","bcsToBytes","s","Buffer","from","o","Uint8Array","c","f","createResourceAddress","a","createTokenAddress","b"],"sources":["C:\\Users\\ROHAN\\Desktop\\projects\\nft-marketplace\\frontend\\node_modules\\@aptos-labs\\ts-sdk\\src\\core\\account\\utils\\address.ts"],"sourcesContent":["import { sha3_256 } from \"@noble/hashes/sha3\";\nimport { AccountAddress } from \"../../accountAddress\";\nimport { DeriveScheme } from \"../../../types\";\n\n/**\n * Creates an object address from creator address and seed\n *\n * @param creatorAddress The object creator account address\n * @param seed The seed in either Uint8Array | string type\n *\n * @returns The object account address\n * @group Implementation\n * @category Account (On-Chain Model)\n */\nexport const createObjectAddress = (creatorAddress: AccountAddress, seed: Uint8Array | string): AccountAddress => {\n  const creatorBytes = creatorAddress.bcsToBytes();\n\n  const seedBytes = typeof seed === \"string\" ? Buffer.from(seed, \"utf8\") : seed;\n\n  const bytes = new Uint8Array([...creatorBytes, ...seedBytes, DeriveScheme.DeriveObjectAddressFromSeed]);\n\n  return new AccountAddress(sha3_256(bytes));\n};\n\n/**\n * Creates a resource address from creator address and seed\n *\n * @param creatorAddress The creator account address\n * @param seed The seed in either Uint8Array | string type\n *\n * @returns The resource account address\n * @group Implementation\n * @category Account (On-Chain Model)\n */\nexport const createResourceAddress = (creatorAddress: AccountAddress, seed: Uint8Array | string): AccountAddress => {\n  const creatorBytes = creatorAddress.bcsToBytes();\n\n  const seedBytes = typeof seed === \"string\" ? Buffer.from(seed, \"utf8\") : seed;\n\n  const bytes = new Uint8Array([...creatorBytes, ...seedBytes, DeriveScheme.DeriveResourceAccountAddress]);\n\n  return new AccountAddress(sha3_256(bytes));\n};\n\n/**\n * Creates a token object address from creator address, collection name and token name\n *\n * @param creatorAddress The token creator account address\n * @param collectionName The collection name\n * @param tokenName The token name\n *\n * @returns The token account address\n * @group Implementation\n * @category Account (On-Chain Model)\n */\nexport const createTokenAddress = (\n  creatorAddress: AccountAddress,\n  collectionName: string,\n  tokenName: string,\n): AccountAddress => {\n  const seed = `${collectionName}::${tokenName}`;\n  return createObjectAddress(creatorAddress, seed);\n};\n"],"mappings":";AAAA,SAASA,QAAA,IAAAC,CAAA,QAAgB;AAclB,IAAMC,CAAA,GAAsBC,CAACC,CAAA,EAAgCC,CAAA,KAA8C;IAChH,IAAMC,CAAA,GAAeF,CAAA,CAAeG,UAAA,CAAW;MAEzCC,CAAA,GAAY,OAAOH,CAAA,IAAS,WAAWI,MAAA,CAAOC,IAAA,CAAKL,CAAA,EAAM,MAAM,IAAIA,CAAA;MAEnEM,CAAA,GAAQ,IAAIC,UAAA,CAAW,CAAC,GAAGN,CAAA,EAAc,GAAGE,CAAA,KAAmD,CAAC;IAEtG,OAAO,IAAIK,CAAA,CAAeZ,CAAA,CAASU,CAAK,CAAC,CAC3C;EAAA;EAYaG,CAAA,GAAwBC,CAACX,CAAA,EAAgCC,CAAA,KAA8C;IAClH,IAAMC,CAAA,GAAeF,CAAA,CAAeG,UAAA,CAAW;MAEzCC,CAAA,GAAY,OAAOH,CAAA,IAAS,WAAWI,MAAA,CAAOC,IAAA,CAAKL,CAAA,EAAM,MAAM,IAAIA,CAAA;MAEnEM,CAAA,GAAQ,IAAIC,UAAA,CAAW,CAAC,GAAGN,CAAA,EAAc,GAAGE,CAAA,KAAoD,CAAC;IAEvG,OAAO,IAAIK,CAAA,CAAeZ,CAAA,CAASU,CAAK,CAAC,CAC3C;EAAA;EAaaK,CAAA,GAAqBC,CAChCb,CAAA,EACAC,CAAA,EACAC,CAAA,KACmB;IACnB,IAAME,CAAA,GAAO,GAAGH,CAAc,KAAKC,CAAS;IAC5C,OAAOJ,CAAA,CAAoBE,CAAA,EAAgBI,CAAI,CACjD;EAAA;AAAA,SAAAN,CAAA,IAAAc,CAAA,EAAAF,CAAA,IAAAI,CAAA,EAAAF,CAAA,IAAAH,CAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}