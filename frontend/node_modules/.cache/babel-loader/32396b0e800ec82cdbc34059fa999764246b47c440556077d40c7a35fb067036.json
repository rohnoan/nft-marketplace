{"ast":null,"code":"import { a as s, c as d, e as t } from \"./chunk-EBMEXURY.mjs\";\nimport { a as l, b as n, c as o, d as z, e as c, f as u } from \"./chunk-56CNRT2K.mjs\";\nvar U = class i extends s {\n    constructor(e) {\n      super(), d(e), this.value = e;\n    }\n    serialize(e) {\n      e.serializeBool(this.value);\n    }\n    serializeForEntryFunction(e) {\n      let r = this.bcsToBytes();\n      e.serializeBytes(r);\n    }\n    serializeForScriptFunction(e) {\n      e.serializeU32AsUleb128(5), e.serialize(this);\n    }\n    deserialize(e) {\n      return new a(e.deserializeU256());\n    }\n    static deserialize(e) {\n      return new i(e.deserializeBool());\n    }\n  },\n  p = class i extends s {\n    constructor(e) {\n      super(), t(e, 0, l), this.value = e;\n    }\n    serialize(e) {\n      e.serializeU8(this.value);\n    }\n    serializeForEntryFunction(e) {\n      let r = this.bcsToBytes();\n      e.serializeBytes(r);\n    }\n    serializeForScriptFunction(e) {\n      e.serializeU32AsUleb128(0), e.serialize(this);\n    }\n    static deserialize(e) {\n      return new i(e.deserializeU8());\n    }\n  },\n  b = class i extends s {\n    constructor(e) {\n      super(), t(e, 0, n), this.value = e;\n    }\n    serialize(e) {\n      e.serializeU16(this.value);\n    }\n    serializeForEntryFunction(e) {\n      let r = this.bcsToBytes();\n      e.serializeBytes(r);\n    }\n    serializeForScriptFunction(e) {\n      e.serializeU32AsUleb128(6), e.serialize(this);\n    }\n    static deserialize(e) {\n      return new i(e.deserializeU16());\n    }\n  },\n  y = class i extends s {\n    constructor(e) {\n      super(), t(e, 0, o), this.value = e;\n    }\n    serialize(e) {\n      e.serializeU32(this.value);\n    }\n    serializeForEntryFunction(e) {\n      let r = this.bcsToBytes();\n      e.serializeBytes(r);\n    }\n    serializeForScriptFunction(e) {\n      e.serializeU32AsUleb128(7), e.serialize(this);\n    }\n    static deserialize(e) {\n      return new i(e.deserializeU32());\n    }\n  },\n  m = class i extends s {\n    constructor(e) {\n      super(), t(e, BigInt(0), z), this.value = BigInt(e);\n    }\n    serialize(e) {\n      e.serializeU64(this.value);\n    }\n    serializeForEntryFunction(e) {\n      let r = this.bcsToBytes();\n      e.serializeBytes(r);\n    }\n    serializeForScriptFunction(e) {\n      e.serializeU32AsUleb128(1), e.serialize(this);\n    }\n    static deserialize(e) {\n      return new i(e.deserializeU64());\n    }\n  },\n  B = class i extends s {\n    constructor(e) {\n      super(), t(e, BigInt(0), c), this.value = BigInt(e);\n    }\n    serialize(e) {\n      e.serializeU128(this.value);\n    }\n    serializeForEntryFunction(e) {\n      let r = this.bcsToBytes();\n      e.serializeBytes(r);\n    }\n    serializeForScriptFunction(e) {\n      e.serializeU32AsUleb128(2), e.serialize(this);\n    }\n    static deserialize(e) {\n      return new i(e.deserializeU128());\n    }\n  },\n  a = class i extends s {\n    constructor(e) {\n      super(), t(e, BigInt(0), u), this.value = BigInt(e);\n    }\n    serialize(e) {\n      e.serializeU256(this.value);\n    }\n    serializeForEntryFunction(e) {\n      let r = this.bcsToBytes();\n      e.serializeBytes(r);\n    }\n    serializeForScriptFunction(e) {\n      e.serializeU32AsUleb128(8), e.serialize(this);\n    }\n    static deserialize(e) {\n      return new i(e.deserializeU256());\n    }\n  };\nexport { U as a, p as b, b as c, y as d, m as e, B as f, a as g };","map":{"version":3,"names":["U","i","s","constructor","e","d","value","serialize","serializeBool","serializeForEntryFunction","r","bcsToBytes","serializeBytes","serializeForScriptFunction","serializeU32AsUleb128","deserialize","a","deserializeU256","deserializeBool","p","t","l","serializeU8","deserializeU8","b","n","serializeU16","deserializeU16","y","o","serializeU32","deserializeU32","m","BigInt","z","serializeU64","deserializeU64","B","c","serializeU128","deserializeU128","u","serializeU256","f","g"],"sources":["C:\\Users\\ROHAN\\Desktop\\projects\\nft-marketplace\\frontend\\node_modules\\@aptos-labs\\ts-sdk\\src\\bcs\\serializable\\movePrimitives.ts"],"sourcesContent":["// Copyright Â© Aptos Foundation\n// SPDX-License-Identifier: Apache-2.0\n\nimport {\n  MAX_U128_BIG_INT,\n  MAX_U16_NUMBER,\n  MAX_U32_NUMBER,\n  MAX_U64_BIG_INT,\n  MAX_U8_NUMBER,\n  MAX_U256_BIG_INT,\n} from \"../consts\";\nimport { Deserializer } from \"../deserializer\";\nimport { Serializable, Serializer, ensureBoolean, validateNumberInRange } from \"../serializer\";\nimport { TransactionArgument } from \"../../transactions/instances/transactionArgument\";\nimport { AnyNumber, Uint16, Uint32, Uint8, ScriptTransactionArgumentVariants } from \"../../types\";\n\n/**\n * Represents a boolean value that can be serialized and deserialized.\n * This class extends the Serializable class and provides methods to serialize\n * the boolean value for different contexts, such as entry functions and script functions.\n *\n * @extends Serializable\n * @group Implementation\n * @category BCS\n */\nexport class Bool extends Serializable implements TransactionArgument {\n  public readonly value: boolean;\n\n  /**\n   * Constructs a new instance with a specified value.\n   * This ensures that the value is validated to be within the acceptable range.\n   *\n   * @param value - The number to be validated and assigned, which must be between 0 and MAX_U256_BIG_INT.\n   * @group Implementation\n   * @category BCS\n   */\n  constructor(value: boolean) {\n    super();\n\n    /**\n     * Ensures that the provided value is of type boolean.\n     * This function throws an error if the value is not a boolean, helping to enforce type safety in your code.\n     *\n     * @param value - The value to be checked for boolean type.\n     * @throws {Error} Throws an error if the value is not a boolean.\n     * @group Implementation\n     * @category BCS\n     */\n    ensureBoolean(value);\n    this.value = value;\n  }\n\n  /**\n   * Serializes the value using the provided serializer.\n   * This function is essential for converting the value into a format suitable for transmission or storage.\n   *\n   * @param serializer - The serializer instance used to perform the serialization.\n   * @group Implementation\n   * @category BCS\n   */\n  serialize(serializer: Serializer): void {\n    serializer.serializeBool(this.value);\n  }\n\n  /**\n   * Serializes the current instance for use in an entry function by converting it to a byte sequence.\n   * This allows the instance to be properly formatted for serialization in transactions.\n   *\n   * @param serializer - The serializer instance used to serialize the byte sequence.\n   * @group Implementation\n   * @category BCS\n   */\n  serializeForEntryFunction(serializer: Serializer): void {\n    const bcsBytes = this.bcsToBytes();\n    serializer.serializeBytes(bcsBytes);\n  }\n\n  /**\n   * Serializes the current instance for use in a script function.\n   * This allows for the conversion of the instance into a format suitable for transmission or storage.\n   *\n   * @param serializer - The serializer used to perform the serialization.\n   * @group Implementation\n   * @category BCS\n   */\n  serializeForScriptFunction(serializer: Serializer): void {\n    serializer.serializeU32AsUleb128(ScriptTransactionArgumentVariants.Bool);\n    serializer.serialize(this);\n  }\n\n  /**\n   * Deserializes a U256 value from the provided deserializer.\n   *\n   * @param deserializer - The deserializer instance used to read the U256 data.\n   * @group Implementation\n   * @category BCS\n   */\n  // eslint-disable-next-line class-methods-use-this\n  deserialize(deserializer: Deserializer) {\n    return new U256(deserializer.deserializeU256());\n  }\n\n  static deserialize(deserializer: Deserializer): Bool {\n    return new Bool(deserializer.deserializeBool());\n  }\n}\n\n/**\n * Represents an unsigned 8-bit integer (U8) value.\n * This class extends the Serializable class and provides methods for serialization and deserialization of U8 values.\n *\n * @extends Serializable\n * @group Implementation\n * @category BCS\n */\nexport class U8 extends Serializable implements TransactionArgument {\n  public readonly value: Uint8;\n\n  constructor(value: Uint8) {\n    super();\n    validateNumberInRange(value, 0, MAX_U8_NUMBER);\n    this.value = value;\n  }\n\n  serialize(serializer: Serializer): void {\n    serializer.serializeU8(this.value);\n  }\n\n  serializeForEntryFunction(serializer: Serializer): void {\n    const bcsBytes = this.bcsToBytes();\n    serializer.serializeBytes(bcsBytes);\n  }\n\n  serializeForScriptFunction(serializer: Serializer): void {\n    serializer.serializeU32AsUleb128(ScriptTransactionArgumentVariants.U8);\n    serializer.serialize(this);\n  }\n\n  static deserialize(deserializer: Deserializer): U8 {\n    return new U8(deserializer.deserializeU8());\n  }\n}\n\n/**\n * Represents a 16-bit unsigned integer (U16) value.\n * This class extends the Serializable class and provides methods for serialization\n * and deserialization of the U16 value.\n *\n * @extends Serializable\n * @group Implementation\n * @category BCS\n */\nexport class U16 extends Serializable implements TransactionArgument {\n  public readonly value: Uint16;\n\n  constructor(value: Uint16) {\n    super();\n    validateNumberInRange(value, 0, MAX_U16_NUMBER);\n    this.value = value;\n  }\n\n  serialize(serializer: Serializer): void {\n    serializer.serializeU16(this.value);\n  }\n\n  serializeForEntryFunction(serializer: Serializer): void {\n    const bcsBytes = this.bcsToBytes();\n    serializer.serializeBytes(bcsBytes);\n  }\n\n  serializeForScriptFunction(serializer: Serializer): void {\n    serializer.serializeU32AsUleb128(ScriptTransactionArgumentVariants.U16);\n    serializer.serialize(this);\n  }\n\n  static deserialize(deserializer: Deserializer): U16 {\n    return new U16(deserializer.deserializeU16());\n  }\n}\n\n/**\n * Represents a 32-bit unsigned integer (U32) that can be serialized and deserialized.\n * This class ensures that the value is within the valid range for a U32.\n *\n * @extends Serializable\n * @group Implementation\n * @category BCS\n */\nexport class U32 extends Serializable implements TransactionArgument {\n  public readonly value: Uint32;\n\n  constructor(value: Uint32) {\n    super();\n    validateNumberInRange(value, 0, MAX_U32_NUMBER);\n    this.value = value;\n  }\n\n  serialize(serializer: Serializer): void {\n    serializer.serializeU32(this.value);\n  }\n\n  serializeForEntryFunction(serializer: Serializer): void {\n    const bcsBytes = this.bcsToBytes();\n    serializer.serializeBytes(bcsBytes);\n  }\n\n  serializeForScriptFunction(serializer: Serializer): void {\n    serializer.serializeU32AsUleb128(ScriptTransactionArgumentVariants.U32);\n    serializer.serialize(this);\n  }\n\n  static deserialize(deserializer: Deserializer): U32 {\n    return new U32(deserializer.deserializeU32());\n  }\n}\n\n/**\n * Represents a 64-bit unsigned integer (U64) and provides methods for serialization.\n *\n * This class ensures that the value is within the valid range for a U64 and provides\n * functionality to serialize the value for various use cases, including entry functions\n * and script functions.\n *\n * @extends Serializable\n * @group Implementation\n * @category BCS\n */\nexport class U64 extends Serializable implements TransactionArgument {\n  public readonly value: bigint;\n\n  constructor(value: AnyNumber) {\n    super();\n    validateNumberInRange(value, BigInt(0), MAX_U64_BIG_INT);\n    this.value = BigInt(value);\n  }\n\n  serialize(serializer: Serializer): void {\n    serializer.serializeU64(this.value);\n  }\n\n  serializeForEntryFunction(serializer: Serializer): void {\n    const bcsBytes = this.bcsToBytes();\n    serializer.serializeBytes(bcsBytes);\n  }\n\n  serializeForScriptFunction(serializer: Serializer): void {\n    serializer.serializeU32AsUleb128(ScriptTransactionArgumentVariants.U64);\n    serializer.serialize(this);\n  }\n\n  static deserialize(deserializer: Deserializer): U64 {\n    return new U64(deserializer.deserializeU64());\n  }\n}\n\n/**\n * Represents a 128-bit unsigned integer value.\n * This class provides methods for serialization and deserialization\n * of U128 values, ensuring that the values are within the valid range.\n *\n * @extends Serializable\n * @group Implementation\n * @category BCS\n */\nexport class U128 extends Serializable implements TransactionArgument {\n  public readonly value: bigint;\n\n  constructor(value: AnyNumber) {\n    super();\n    validateNumberInRange(value, BigInt(0), MAX_U128_BIG_INT);\n    this.value = BigInt(value);\n  }\n\n  serialize(serializer: Serializer): void {\n    serializer.serializeU128(this.value);\n  }\n\n  serializeForEntryFunction(serializer: Serializer): void {\n    const bcsBytes = this.bcsToBytes();\n    serializer.serializeBytes(bcsBytes);\n  }\n\n  serializeForScriptFunction(serializer: Serializer): void {\n    serializer.serializeU32AsUleb128(ScriptTransactionArgumentVariants.U128);\n    serializer.serialize(this);\n  }\n\n  static deserialize(deserializer: Deserializer): U128 {\n    return new U128(deserializer.deserializeU128());\n  }\n}\n\n/**\n * Represents a 256-bit unsigned integer (U256) that extends the Serializable class.\n * This class provides methods for serialization and deserialization of U256 values,\n * ensuring that the values are within the valid range.\n *\n * @extends Serializable\n * @group Implementation\n * @category BCS\n */\nexport class U256 extends Serializable implements TransactionArgument {\n  public readonly value: bigint;\n\n  constructor(value: AnyNumber) {\n    super();\n    validateNumberInRange(value, BigInt(0), MAX_U256_BIG_INT);\n    this.value = BigInt(value);\n  }\n\n  serialize(serializer: Serializer): void {\n    serializer.serializeU256(this.value);\n  }\n\n  serializeForEntryFunction(serializer: Serializer): void {\n    const bcsBytes = this.bcsToBytes();\n    serializer.serializeBytes(bcsBytes);\n  }\n\n  serializeForScriptFunction(serializer: Serializer): void {\n    serializer.serializeU32AsUleb128(ScriptTransactionArgumentVariants.U256);\n    serializer.serialize(this);\n  }\n\n  static deserialize(deserializer: Deserializer): U256 {\n    return new U256(deserializer.deserializeU256());\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}