{"ast":null,"code":"// src/WalletCore.ts\nimport { HexString } from \"aptos\";\nimport EventEmitter from \"eventemitter3\";\nimport nacl from \"tweetnacl\";\nimport { Buffer } from \"buffer\";\n\n// src/constants.ts\nvar WalletReadyState = /* @__PURE__ */(WalletReadyState2 => {\n  WalletReadyState2[\"Installed\"] = \"Installed\";\n  WalletReadyState2[\"NotDetected\"] = \"NotDetected\";\n  WalletReadyState2[\"Loadable\"] = \"Loadable\";\n  WalletReadyState2[\"Unsupported\"] = \"Unsupported\";\n  return WalletReadyState2;\n})(WalletReadyState || {});\nvar NetworkName = /* @__PURE__ */(NetworkName2 => {\n  NetworkName2[\"Mainnet\"] = \"mainnet\";\n  NetworkName2[\"Testnet\"] = \"testnet\";\n  NetworkName2[\"Devnet\"] = \"devnet\";\n  return NetworkName2;\n})(NetworkName || {});\n\n// src/error/index.ts\nvar WalletError = class extends Error {\n  constructor(message, error) {\n    super(message);\n    this.error = error;\n  }\n};\nvar WalletNotSelectedError = class extends WalletError {\n  constructor() {\n    super(...arguments);\n    this.name = \"WalletNotSelectedError\";\n  }\n};\nvar WalletNotReadyError = class extends WalletError {\n  constructor() {\n    super(...arguments);\n    this.name = \"WalletNotReadyError\";\n  }\n};\nvar WalletConnectionError = class extends WalletError {\n  constructor() {\n    super(...arguments);\n    this.name = \"WalletConnectionError\";\n  }\n};\nvar WalletDisconnectionError = class extends WalletError {\n  constructor() {\n    super(...arguments);\n    this.name = \"WalletDisconnectionError\";\n  }\n};\nvar WalletAccountError = class extends WalletError {\n  constructor() {\n    super(...arguments);\n    this.name = \"WalletAccountError\";\n  }\n};\nvar WalletGetNetworkError = class extends WalletError {\n  constructor() {\n    super(...arguments);\n    this.name = \"WalletGetNetworkError\";\n  }\n};\nvar WalletAccountChangeError = class extends WalletError {\n  constructor() {\n    super(...arguments);\n    this.name = \"WalletAccountChangeError\";\n  }\n};\nvar WalletNetworkChangeError = class extends WalletError {\n  constructor() {\n    super(...arguments);\n    this.name = \"WalletNetworkChangeError\";\n  }\n};\nvar WalletNotConnectedError = class extends WalletError {\n  constructor() {\n    super(...arguments);\n    this.name = \"WalletNotConnectedError\";\n  }\n};\nvar WalletSignMessageError = class extends WalletError {\n  constructor() {\n    super(...arguments);\n    this.name = \"WalletSignMessageError\";\n  }\n};\nvar WalletSignMessageAndVerifyError = class extends WalletError {\n  constructor() {\n    super(...arguments);\n    this.name = \"WalletSignMessageAndVerifyError\";\n  }\n};\nvar WalletSignAndSubmitMessageError = class extends WalletError {\n  constructor() {\n    super(...arguments);\n    this.name = \"WalletSignAndSubmitMessageError\";\n  }\n};\nvar WalletSignTransactionError = class extends WalletError {\n  constructor() {\n    super(...arguments);\n    this.name = \"WalletSignTransactionError\";\n  }\n};\nvar WalletNotSupportedMethod = class extends WalletError {\n  constructor() {\n    super(...arguments);\n    this.name = \"WalletNotSupportedMethod\";\n  }\n};\n\n// src/utils/scopePollingDetectionStrategy.ts\nfunction scopePollingDetectionStrategy(detect) {\n  if (typeof window === \"undefined\" || typeof document === \"undefined\") return;\n  const disposers = [];\n  function detectAndDispose() {\n    const detected = detect();\n    if (detected) {\n      for (const dispose of disposers) {\n        dispose();\n      }\n    }\n  }\n  const interval = setInterval(detectAndDispose, 1e3);\n  disposers.push(() => clearInterval(interval));\n  if (document.readyState === \"loading\") {\n    document.addEventListener(\"DOMContentLoaded\", detectAndDispose, {\n      once: true\n    });\n    disposers.push(() => document.removeEventListener(\"DOMContentLoaded\", detectAndDispose));\n  }\n  if (document.readyState !== \"complete\") {\n    window.addEventListener(\"load\", detectAndDispose, {\n      once: true\n    });\n    disposers.push(() => window.removeEventListener(\"load\", detectAndDispose));\n  }\n  detectAndDispose();\n}\n\n// src/utils/localStorage.ts\nvar LOCAL_STORAGE_ITEM_KEY = \"AptosWalletName\";\nfunction setLocalStorage(walletName) {\n  localStorage.setItem(LOCAL_STORAGE_ITEM_KEY, walletName);\n}\nfunction removeLocalStorage() {\n  localStorage.removeItem(LOCAL_STORAGE_ITEM_KEY);\n}\n\n// src/ans.ts\nvar ChainIdToAnsContractAddressMap = {\n  \"1\": \"mainnet\",\n  \"2\": \"testnet\"\n};\nvar getNameByAddress = async (chainId, address) => {\n  try {\n    if (!ChainIdToAnsContractAddressMap[chainId]) return null;\n    const response = await fetch(`https://www.aptosnames.com/api/${ChainIdToAnsContractAddressMap[chainId]}/v1/name/${address}`);\n    const data = await response.json();\n    return data.name;\n  } catch (e) {\n    console.log(\"error\", e);\n    return null;\n  }\n};\n\n// src/WalletCore.ts\nvar WalletCore = class extends EventEmitter {\n  constructor(plugins) {\n    super();\n    this._wallets = [];\n    this._wallet = null;\n    this._account = null;\n    this._network = null;\n    this._connecting = false;\n    this._connected = false;\n    this._wallets = plugins;\n    this.scopePollingDetectionStrategy();\n  }\n  scopePollingDetectionStrategy() {\n    var _a;\n    (_a = this._wallets) == null ? void 0 : _a.forEach(wallet => {\n      if (!wallet.readyState) {\n        wallet.readyState = typeof window === \"undefined\" || typeof document === \"undefined\" ? \"Unsupported\" /* Unsupported */ : \"NotDetected\" /* NotDetected */;\n      }\n      if (typeof window !== \"undefined\") {\n        scopePollingDetectionStrategy(() => {\n          const providerName = wallet.providerName || wallet.name.toLowerCase();\n          if (Object.keys(window).includes(providerName)) {\n            wallet.readyState = \"Installed\" /* Installed */;\n            wallet.provider = window[providerName];\n            this.emit(\"readyStateChange\", wallet);\n            return true;\n          }\n          return false;\n        });\n      }\n    });\n  }\n  doesWalletExist() {\n    if (!this._connected || this._connecting || !this._wallet) throw new WalletNotConnectedError().name;\n    if (!(this._wallet.readyState === \"Loadable\" /* Loadable */ || this._wallet.readyState === \"Installed\" /* Installed */)) throw new WalletNotReadyError().name;\n    return true;\n  }\n  clearData() {\n    this._connected = false;\n    this.setWallet(null);\n    this.setAccount(null);\n    this.setNetwork(null);\n    removeLocalStorage();\n  }\n  async setAnsName() {\n    var _a;\n    if (((_a = this._network) == null ? void 0 : _a.chainId) && this._account) {\n      const name = await getNameByAddress(this._network.chainId, this._account.address);\n      this._account.ansName = name;\n    }\n  }\n  setWallet(wallet) {\n    this._wallet = wallet;\n  }\n  setAccount(account) {\n    this._account = account;\n  }\n  setNetwork(network) {\n    this._network = network;\n  }\n  isConnected() {\n    return this._connected;\n  }\n  get wallets() {\n    return this._wallets;\n  }\n  get wallet() {\n    try {\n      if (!this._wallet) return null;\n      return {\n        name: this._wallet.name,\n        icon: this._wallet.icon,\n        url: this._wallet.url\n      };\n    } catch (error) {\n      throw new WalletNotSelectedError(error).message;\n    }\n  }\n  get account() {\n    try {\n      return this._account;\n    } catch (error) {\n      throw new WalletAccountError(error).message;\n    }\n  }\n  get network() {\n    try {\n      return this._network;\n    } catch (error) {\n      throw new WalletGetNetworkError(error).message;\n    }\n  }\n  async connect(walletName) {\n    var _a, _b;\n    try {\n      const selectedWallet = (_a = this._wallets) == null ? void 0 : _a.find(wallet => wallet.name === walletName);\n      if (!selectedWallet || selectedWallet.readyState !== \"Installed\" /* Installed */ && selectedWallet.readyState !== \"Loadable\" /* Loadable */) {\n        return;\n      }\n      if (this._connected) {\n        if (((_b = this.wallet) == null ? void 0 : _b.name) === walletName) return;\n        await this.disconnect();\n      }\n      this._connecting = true;\n      this.setWallet(selectedWallet);\n      const account = await selectedWallet.connect();\n      this.setAccount({\n        ...account\n      });\n      const network = await selectedWallet.network();\n      this.setNetwork({\n        ...network\n      });\n      await this.setAnsName();\n      setLocalStorage(selectedWallet.name);\n      this._connected = true;\n      this.emit(\"connect\", account);\n    } catch (error) {\n      this.clearData();\n      throw new WalletConnectionError(error).message;\n    } finally {\n      this._connecting = false;\n    }\n  }\n  async disconnect() {\n    var _a;\n    try {\n      this.doesWalletExist();\n      await ((_a = this._wallet) == null ? void 0 : _a.disconnect());\n      this.clearData();\n      this.emit(\"disconnect\");\n    } catch (error) {\n      throw new WalletDisconnectionError(error).message;\n    }\n  }\n  async signAndSubmitTransaction(transaction) {\n    var _a;\n    try {\n      this.doesWalletExist();\n      const response = await ((_a = this._wallet) == null ? void 0 : _a.signAndSubmitTransaction(transaction));\n      return response;\n    } catch (error) {\n      const errMsg = typeof error == \"object\" && \"message\" in error ? error.message : error;\n      throw new WalletSignAndSubmitMessageError(errMsg).message;\n    }\n  }\n  async signAndSubmitBCSTransaction(transaction) {\n    var _a;\n    if (this._wallet && !(\"signAndSubmitBCSTransaction\" in this._wallet)) {\n      throw new WalletNotSupportedMethod(`Submit a BCS Transaction is not supported by ${(_a = this.wallet) == null ? void 0 : _a.name}`).message;\n    }\n    try {\n      this.doesWalletExist();\n      const response = await this._wallet.signAndSubmitBCSTransaction(transaction);\n      return response;\n    } catch (error) {\n      const errMsg = typeof error == \"object\" && \"message\" in error ? error.message : error;\n      throw new WalletSignAndSubmitMessageError(errMsg).message;\n    }\n  }\n  async signTransaction(transaction) {\n    var _a;\n    if (this._wallet && !(\"signTransaction\" in this._wallet)) {\n      throw new WalletNotSupportedMethod(`Sign Transaction is not supported by ${(_a = this.wallet) == null ? void 0 : _a.name}`).message;\n    }\n    try {\n      this.doesWalletExist();\n      const response = await this._wallet.signTransaction(transaction);\n      return response;\n    } catch (error) {\n      const errMsg = typeof error == \"object\" && \"message\" in error ? error.message : error;\n      throw new WalletSignTransactionError(errMsg).message;\n    }\n  }\n  async signMessage(message) {\n    var _a;\n    try {\n      this.doesWalletExist();\n      if (!this._wallet) return null;\n      const response = await ((_a = this._wallet) == null ? void 0 : _a.signMessage(message));\n      return response;\n    } catch (error) {\n      const errMsg = typeof error == \"object\" && \"message\" in error ? error.message : error;\n      throw new WalletSignMessageError(errMsg).message;\n    }\n  }\n  async onAccountChange() {\n    var _a;\n    try {\n      this.doesWalletExist();\n      await ((_a = this._wallet) == null ? void 0 : _a.onAccountChange(async data => {\n        this.setAccount({\n          ...data\n        });\n        await this.setAnsName();\n        this.emit(\"accountChange\", this._account);\n      }));\n    } catch (error) {\n      const errMsg = typeof error == \"object\" && \"message\" in error ? error.message : error;\n      throw new WalletAccountChangeError(errMsg).message;\n    }\n  }\n  async onNetworkChange() {\n    var _a;\n    try {\n      this.doesWalletExist();\n      await ((_a = this._wallet) == null ? void 0 : _a.onNetworkChange(async data => {\n        this.setNetwork({\n          ...data\n        });\n        await this.setAnsName();\n        this.emit(\"networkChange\", this._network);\n      }));\n    } catch (error) {\n      const errMsg = typeof error == \"object\" && \"message\" in error ? error.message : error;\n      throw new WalletNetworkChangeError(errMsg).message;\n    }\n  }\n  async signMessageAndVerify(message) {\n    var _a;\n    try {\n      this.doesWalletExist();\n      if (!this._account) throw new Error(\"No account found!\");\n      const response = await ((_a = this._wallet) == null ? void 0 : _a.signMessage(message));\n      if (!response) throw new WalletSignMessageAndVerifyError(\"Failed to sign a message\").message;\n      let verified = false;\n      if (Array.isArray(response.signature)) {\n        const {\n          fullMessage,\n          signature,\n          bitmap\n        } = response;\n        if (bitmap) {\n          const minKeysRequired = this._account.minKeysRequired;\n          if (signature.length < minKeysRequired) {\n            verified = false;\n          } else {\n            const bits = Array.from(bitmap).flatMap(n => Array.from({\n              length: 8\n            }).map((_, i) => n >> i & 1));\n            const index = bits.map((_, i) => i).filter(i => bits[i]);\n            const publicKeys = this._account.publicKey;\n            const matchedPublicKeys = publicKeys.filter((_, i) => index.includes(i));\n            verified = true;\n            for (let i = 0; i < signature.length; i++) {\n              const isSigVerified = nacl.sign.detached.verify(Buffer.from(fullMessage), Buffer.from(signature[i], \"hex\"), Buffer.from(matchedPublicKeys[i], \"hex\"));\n              if (!isSigVerified) {\n                verified = false;\n                break;\n              }\n            }\n          }\n        } else {\n          throw new WalletSignMessageAndVerifyError(\"Failed to get a bitmap\").message;\n        }\n      } else {\n        const currentAccountPublicKey = new HexString(this._account.publicKey);\n        const signature = new HexString(response.signature);\n        verified = nacl.sign.detached.verify(Buffer.from(response.fullMessage), Buffer.from(signature.noPrefix(), \"hex\"), Buffer.from(currentAccountPublicKey.noPrefix(), \"hex\"));\n      }\n      return verified;\n    } catch (error) {\n      const errMsg = typeof error == \"object\" && \"message\" in error ? error.message : error;\n      throw new WalletSignMessageAndVerifyError(errMsg).message;\n    }\n  }\n};\nexport { NetworkName, WalletCore, WalletReadyState };","map":{"version":3,"names":["HexString","EventEmitter","nacl","Buffer","WalletReadyState","WalletReadyState2","NetworkName","NetworkName2","WalletError","Error","constructor","message","error","WalletNotSelectedError","arguments","name","WalletNotReadyError","WalletConnectionError","WalletDisconnectionError","WalletAccountError","WalletGetNetworkError","WalletAccountChangeError","WalletNetworkChangeError","WalletNotConnectedError","WalletSignMessageError","WalletSignMessageAndVerifyError","WalletSignAndSubmitMessageError","WalletSignTransactionError","WalletNotSupportedMethod","scopePollingDetectionStrategy","detect","window","document","disposers","detectAndDispose","detected","dispose","interval","setInterval","push","clearInterval","readyState","addEventListener","once","removeEventListener","LOCAL_STORAGE_ITEM_KEY","setLocalStorage","walletName","localStorage","setItem","removeLocalStorage","removeItem","ChainIdToAnsContractAddressMap","getNameByAddress","chainId","address","response","fetch","data","json","e","console","log","WalletCore","plugins","_wallets","_wallet","_account","_network","_connecting","_connected","_a","forEach","wallet","providerName","toLowerCase","Object","keys","includes","provider","emit","doesWalletExist","clearData","setWallet","setAccount","setNetwork","setAnsName","ansName","account","network","isConnected","wallets","icon","url","connect","_b","selectedWallet","find","disconnect","signAndSubmitTransaction","transaction","errMsg","signAndSubmitBCSTransaction","signTransaction","signMessage","onAccountChange","onNetworkChange","signMessageAndVerify","verified","Array","isArray","signature","fullMessage","bitmap","minKeysRequired","length","bits","from","flatMap","n","map","_","i","index","filter","publicKeys","publicKey","matchedPublicKeys","isSigVerified","sign","detached","verify","currentAccountPublicKey","noPrefix"],"sources":["C:/Users/ROHAN/Desktop/projects/nft-marketplace/frontend/node_modules/@aptos-labs/wallet-adapter-core/dist/index.mjs"],"sourcesContent":["// src/WalletCore.ts\nimport { HexString } from \"aptos\";\nimport EventEmitter from \"eventemitter3\";\nimport nacl from \"tweetnacl\";\nimport { Buffer } from \"buffer\";\n\n// src/constants.ts\nvar WalletReadyState = /* @__PURE__ */ ((WalletReadyState2) => {\n  WalletReadyState2[\"Installed\"] = \"Installed\";\n  WalletReadyState2[\"NotDetected\"] = \"NotDetected\";\n  WalletReadyState2[\"Loadable\"] = \"Loadable\";\n  WalletReadyState2[\"Unsupported\"] = \"Unsupported\";\n  return WalletReadyState2;\n})(WalletReadyState || {});\nvar NetworkName = /* @__PURE__ */ ((NetworkName2) => {\n  NetworkName2[\"Mainnet\"] = \"mainnet\";\n  NetworkName2[\"Testnet\"] = \"testnet\";\n  NetworkName2[\"Devnet\"] = \"devnet\";\n  return NetworkName2;\n})(NetworkName || {});\n\n// src/error/index.ts\nvar WalletError = class extends Error {\n  constructor(message, error) {\n    super(message);\n    this.error = error;\n  }\n};\nvar WalletNotSelectedError = class extends WalletError {\n  constructor() {\n    super(...arguments);\n    this.name = \"WalletNotSelectedError\";\n  }\n};\nvar WalletNotReadyError = class extends WalletError {\n  constructor() {\n    super(...arguments);\n    this.name = \"WalletNotReadyError\";\n  }\n};\nvar WalletConnectionError = class extends WalletError {\n  constructor() {\n    super(...arguments);\n    this.name = \"WalletConnectionError\";\n  }\n};\nvar WalletDisconnectionError = class extends WalletError {\n  constructor() {\n    super(...arguments);\n    this.name = \"WalletDisconnectionError\";\n  }\n};\nvar WalletAccountError = class extends WalletError {\n  constructor() {\n    super(...arguments);\n    this.name = \"WalletAccountError\";\n  }\n};\nvar WalletGetNetworkError = class extends WalletError {\n  constructor() {\n    super(...arguments);\n    this.name = \"WalletGetNetworkError\";\n  }\n};\nvar WalletAccountChangeError = class extends WalletError {\n  constructor() {\n    super(...arguments);\n    this.name = \"WalletAccountChangeError\";\n  }\n};\nvar WalletNetworkChangeError = class extends WalletError {\n  constructor() {\n    super(...arguments);\n    this.name = \"WalletNetworkChangeError\";\n  }\n};\nvar WalletNotConnectedError = class extends WalletError {\n  constructor() {\n    super(...arguments);\n    this.name = \"WalletNotConnectedError\";\n  }\n};\nvar WalletSignMessageError = class extends WalletError {\n  constructor() {\n    super(...arguments);\n    this.name = \"WalletSignMessageError\";\n  }\n};\nvar WalletSignMessageAndVerifyError = class extends WalletError {\n  constructor() {\n    super(...arguments);\n    this.name = \"WalletSignMessageAndVerifyError\";\n  }\n};\nvar WalletSignAndSubmitMessageError = class extends WalletError {\n  constructor() {\n    super(...arguments);\n    this.name = \"WalletSignAndSubmitMessageError\";\n  }\n};\nvar WalletSignTransactionError = class extends WalletError {\n  constructor() {\n    super(...arguments);\n    this.name = \"WalletSignTransactionError\";\n  }\n};\nvar WalletNotSupportedMethod = class extends WalletError {\n  constructor() {\n    super(...arguments);\n    this.name = \"WalletNotSupportedMethod\";\n  }\n};\n\n// src/utils/scopePollingDetectionStrategy.ts\nfunction scopePollingDetectionStrategy(detect) {\n  if (typeof window === \"undefined\" || typeof document === \"undefined\")\n    return;\n  const disposers = [];\n  function detectAndDispose() {\n    const detected = detect();\n    if (detected) {\n      for (const dispose of disposers) {\n        dispose();\n      }\n    }\n  }\n  const interval = setInterval(detectAndDispose, 1e3);\n  disposers.push(() => clearInterval(interval));\n  if (document.readyState === \"loading\") {\n    document.addEventListener(\"DOMContentLoaded\", detectAndDispose, {\n      once: true\n    });\n    disposers.push(\n      () => document.removeEventListener(\"DOMContentLoaded\", detectAndDispose)\n    );\n  }\n  if (document.readyState !== \"complete\") {\n    window.addEventListener(\"load\", detectAndDispose, { once: true });\n    disposers.push(() => window.removeEventListener(\"load\", detectAndDispose));\n  }\n  detectAndDispose();\n}\n\n// src/utils/localStorage.ts\nvar LOCAL_STORAGE_ITEM_KEY = \"AptosWalletName\";\nfunction setLocalStorage(walletName) {\n  localStorage.setItem(LOCAL_STORAGE_ITEM_KEY, walletName);\n}\nfunction removeLocalStorage() {\n  localStorage.removeItem(LOCAL_STORAGE_ITEM_KEY);\n}\n\n// src/ans.ts\nvar ChainIdToAnsContractAddressMap = {\n  \"1\": \"mainnet\",\n  \"2\": \"testnet\"\n};\nvar getNameByAddress = async (chainId, address) => {\n  try {\n    if (!ChainIdToAnsContractAddressMap[chainId])\n      return null;\n    const response = await fetch(\n      `https://www.aptosnames.com/api/${ChainIdToAnsContractAddressMap[chainId]}/v1/name/${address}`\n    );\n    const data = await response.json();\n    return data.name;\n  } catch (e) {\n    console.log(\"error\", e);\n    return null;\n  }\n};\n\n// src/WalletCore.ts\nvar WalletCore = class extends EventEmitter {\n  constructor(plugins) {\n    super();\n    this._wallets = [];\n    this._wallet = null;\n    this._account = null;\n    this._network = null;\n    this._connecting = false;\n    this._connected = false;\n    this._wallets = plugins;\n    this.scopePollingDetectionStrategy();\n  }\n  scopePollingDetectionStrategy() {\n    var _a;\n    (_a = this._wallets) == null ? void 0 : _a.forEach((wallet) => {\n      if (!wallet.readyState) {\n        wallet.readyState = typeof window === \"undefined\" || typeof document === \"undefined\" ? \"Unsupported\" /* Unsupported */ : \"NotDetected\" /* NotDetected */;\n      }\n      if (typeof window !== \"undefined\") {\n        scopePollingDetectionStrategy(() => {\n          const providerName = wallet.providerName || wallet.name.toLowerCase();\n          if (Object.keys(window).includes(providerName)) {\n            wallet.readyState = \"Installed\" /* Installed */;\n            wallet.provider = window[providerName];\n            this.emit(\"readyStateChange\", wallet);\n            return true;\n          }\n          return false;\n        });\n      }\n    });\n  }\n  doesWalletExist() {\n    if (!this._connected || this._connecting || !this._wallet)\n      throw new WalletNotConnectedError().name;\n    if (!(this._wallet.readyState === \"Loadable\" /* Loadable */ || this._wallet.readyState === \"Installed\" /* Installed */))\n      throw new WalletNotReadyError().name;\n    return true;\n  }\n  clearData() {\n    this._connected = false;\n    this.setWallet(null);\n    this.setAccount(null);\n    this.setNetwork(null);\n    removeLocalStorage();\n  }\n  async setAnsName() {\n    var _a;\n    if (((_a = this._network) == null ? void 0 : _a.chainId) && this._account) {\n      const name = await getNameByAddress(\n        this._network.chainId,\n        this._account.address\n      );\n      this._account.ansName = name;\n    }\n  }\n  setWallet(wallet) {\n    this._wallet = wallet;\n  }\n  setAccount(account) {\n    this._account = account;\n  }\n  setNetwork(network) {\n    this._network = network;\n  }\n  isConnected() {\n    return this._connected;\n  }\n  get wallets() {\n    return this._wallets;\n  }\n  get wallet() {\n    try {\n      if (!this._wallet)\n        return null;\n      return {\n        name: this._wallet.name,\n        icon: this._wallet.icon,\n        url: this._wallet.url\n      };\n    } catch (error) {\n      throw new WalletNotSelectedError(error).message;\n    }\n  }\n  get account() {\n    try {\n      return this._account;\n    } catch (error) {\n      throw new WalletAccountError(error).message;\n    }\n  }\n  get network() {\n    try {\n      return this._network;\n    } catch (error) {\n      throw new WalletGetNetworkError(error).message;\n    }\n  }\n  async connect(walletName) {\n    var _a, _b;\n    try {\n      const selectedWallet = (_a = this._wallets) == null ? void 0 : _a.find(\n        (wallet) => wallet.name === walletName\n      );\n      if (!selectedWallet || selectedWallet.readyState !== \"Installed\" /* Installed */ && selectedWallet.readyState !== \"Loadable\" /* Loadable */) {\n        return;\n      }\n      if (this._connected) {\n        if (((_b = this.wallet) == null ? void 0 : _b.name) === walletName)\n          return;\n        await this.disconnect();\n      }\n      this._connecting = true;\n      this.setWallet(selectedWallet);\n      const account = await selectedWallet.connect();\n      this.setAccount({ ...account });\n      const network = await selectedWallet.network();\n      this.setNetwork({ ...network });\n      await this.setAnsName();\n      setLocalStorage(selectedWallet.name);\n      this._connected = true;\n      this.emit(\"connect\", account);\n    } catch (error) {\n      this.clearData();\n      throw new WalletConnectionError(error).message;\n    } finally {\n      this._connecting = false;\n    }\n  }\n  async disconnect() {\n    var _a;\n    try {\n      this.doesWalletExist();\n      await ((_a = this._wallet) == null ? void 0 : _a.disconnect());\n      this.clearData();\n      this.emit(\"disconnect\");\n    } catch (error) {\n      throw new WalletDisconnectionError(error).message;\n    }\n  }\n  async signAndSubmitTransaction(transaction) {\n    var _a;\n    try {\n      this.doesWalletExist();\n      const response = await ((_a = this._wallet) == null ? void 0 : _a.signAndSubmitTransaction(\n        transaction\n      ));\n      return response;\n    } catch (error) {\n      const errMsg = typeof error == \"object\" && \"message\" in error ? error.message : error;\n      throw new WalletSignAndSubmitMessageError(errMsg).message;\n    }\n  }\n  async signAndSubmitBCSTransaction(transaction) {\n    var _a;\n    if (this._wallet && !(\"signAndSubmitBCSTransaction\" in this._wallet)) {\n      throw new WalletNotSupportedMethod(\n        `Submit a BCS Transaction is not supported by ${(_a = this.wallet) == null ? void 0 : _a.name}`\n      ).message;\n    }\n    try {\n      this.doesWalletExist();\n      const response = await this._wallet.signAndSubmitBCSTransaction(\n        transaction\n      );\n      return response;\n    } catch (error) {\n      const errMsg = typeof error == \"object\" && \"message\" in error ? error.message : error;\n      throw new WalletSignAndSubmitMessageError(errMsg).message;\n    }\n  }\n  async signTransaction(transaction) {\n    var _a;\n    if (this._wallet && !(\"signTransaction\" in this._wallet)) {\n      throw new WalletNotSupportedMethod(\n        `Sign Transaction is not supported by ${(_a = this.wallet) == null ? void 0 : _a.name}`\n      ).message;\n    }\n    try {\n      this.doesWalletExist();\n      const response = await this._wallet.signTransaction(transaction);\n      return response;\n    } catch (error) {\n      const errMsg = typeof error == \"object\" && \"message\" in error ? error.message : error;\n      throw new WalletSignTransactionError(errMsg).message;\n    }\n  }\n  async signMessage(message) {\n    var _a;\n    try {\n      this.doesWalletExist();\n      if (!this._wallet)\n        return null;\n      const response = await ((_a = this._wallet) == null ? void 0 : _a.signMessage(message));\n      return response;\n    } catch (error) {\n      const errMsg = typeof error == \"object\" && \"message\" in error ? error.message : error;\n      throw new WalletSignMessageError(errMsg).message;\n    }\n  }\n  async onAccountChange() {\n    var _a;\n    try {\n      this.doesWalletExist();\n      await ((_a = this._wallet) == null ? void 0 : _a.onAccountChange(async (data) => {\n        this.setAccount({ ...data });\n        await this.setAnsName();\n        this.emit(\"accountChange\", this._account);\n      }));\n    } catch (error) {\n      const errMsg = typeof error == \"object\" && \"message\" in error ? error.message : error;\n      throw new WalletAccountChangeError(errMsg).message;\n    }\n  }\n  async onNetworkChange() {\n    var _a;\n    try {\n      this.doesWalletExist();\n      await ((_a = this._wallet) == null ? void 0 : _a.onNetworkChange(async (data) => {\n        this.setNetwork({ ...data });\n        await this.setAnsName();\n        this.emit(\"networkChange\", this._network);\n      }));\n    } catch (error) {\n      const errMsg = typeof error == \"object\" && \"message\" in error ? error.message : error;\n      throw new WalletNetworkChangeError(errMsg).message;\n    }\n  }\n  async signMessageAndVerify(message) {\n    var _a;\n    try {\n      this.doesWalletExist();\n      if (!this._account)\n        throw new Error(\"No account found!\");\n      const response = await ((_a = this._wallet) == null ? void 0 : _a.signMessage(message));\n      if (!response)\n        throw new WalletSignMessageAndVerifyError(\"Failed to sign a message\").message;\n      let verified = false;\n      if (Array.isArray(response.signature)) {\n        const { fullMessage, signature, bitmap } = response;\n        if (bitmap) {\n          const minKeysRequired = this._account.minKeysRequired;\n          if (signature.length < minKeysRequired) {\n            verified = false;\n          } else {\n            const bits = Array.from(bitmap).flatMap(\n              (n) => Array.from({ length: 8 }).map((_, i) => n >> i & 1)\n            );\n            const index = bits.map((_, i) => i).filter((i) => bits[i]);\n            const publicKeys = this._account.publicKey;\n            const matchedPublicKeys = publicKeys.filter(\n              (_, i) => index.includes(i)\n            );\n            verified = true;\n            for (let i = 0; i < signature.length; i++) {\n              const isSigVerified = nacl.sign.detached.verify(\n                Buffer.from(fullMessage),\n                Buffer.from(signature[i], \"hex\"),\n                Buffer.from(matchedPublicKeys[i], \"hex\")\n              );\n              if (!isSigVerified) {\n                verified = false;\n                break;\n              }\n            }\n          }\n        } else {\n          throw new WalletSignMessageAndVerifyError(\"Failed to get a bitmap\").message;\n        }\n      } else {\n        const currentAccountPublicKey = new HexString(\n          this._account.publicKey\n        );\n        const signature = new HexString(response.signature);\n        verified = nacl.sign.detached.verify(\n          Buffer.from(response.fullMessage),\n          Buffer.from(signature.noPrefix(), \"hex\"),\n          Buffer.from(currentAccountPublicKey.noPrefix(), \"hex\")\n        );\n      }\n      return verified;\n    } catch (error) {\n      const errMsg = typeof error == \"object\" && \"message\" in error ? error.message : error;\n      throw new WalletSignMessageAndVerifyError(errMsg).message;\n    }\n  }\n};\nexport {\n  NetworkName,\n  WalletCore,\n  WalletReadyState\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}