{"ast":null,"code":"/*\n * ed2curve: convert Ed25519 signing key pair into Curve25519\n * key pair suitable for Diffie-Hellman key exchange.\n *\n * Written by Dmitry Chestnykh in 2014. Public domain.\n */\n/* jshint newcap: false */\n(function (root, f) {\n  'use strict';\n\n  if (typeof module !== 'undefined' && module.exports) module.exports = f(require('tweetnacl'));else root.ed2curve = f(root.nacl);\n})(this, function (nacl) {\n  'use strict';\n\n  if (!nacl) throw new Error('tweetnacl not loaded');\n\n  // -- Operations copied from TweetNaCl.js. --\n\n  var gf = function (init) {\n    var i,\n      r = new Float64Array(16);\n    if (init) for (i = 0; i < init.length; i++) r[i] = init[i];\n    return r;\n  };\n  var gf0 = gf(),\n    gf1 = gf([1]),\n    D = gf([0x78a3, 0x1359, 0x4dca, 0x75eb, 0xd8ab, 0x4141, 0x0a4d, 0x0070, 0xe898, 0x7779, 0x4079, 0x8cc7, 0xfe73, 0x2b6f, 0x6cee, 0x5203]),\n    I = gf([0xa0b0, 0x4a0e, 0x1b27, 0xc4ee, 0xe478, 0xad2f, 0x1806, 0x2f43, 0xd7a7, 0x3dfb, 0x0099, 0x2b4d, 0xdf0b, 0x4fc1, 0x2480, 0x2b83]);\n  function car25519(o) {\n    var c;\n    var i;\n    for (i = 0; i < 16; i++) {\n      o[i] += 65536;\n      c = Math.floor(o[i] / 65536);\n      o[(i + 1) * (i < 15 ? 1 : 0)] += c - 1 + 37 * (c - 1) * (i === 15 ? 1 : 0);\n      o[i] -= c * 65536;\n    }\n  }\n  function sel25519(p, q, b) {\n    var t,\n      c = ~(b - 1);\n    for (var i = 0; i < 16; i++) {\n      t = c & (p[i] ^ q[i]);\n      p[i] ^= t;\n      q[i] ^= t;\n    }\n  }\n  function unpack25519(o, n) {\n    var i;\n    for (i = 0; i < 16; i++) o[i] = n[2 * i] + (n[2 * i + 1] << 8);\n    o[15] &= 0x7fff;\n  }\n\n  // addition\n  function A(o, a, b) {\n    var i;\n    for (i = 0; i < 16; i++) o[i] = a[i] + b[i] | 0;\n  }\n\n  // subtraction\n  function Z(o, a, b) {\n    var i;\n    for (i = 0; i < 16; i++) o[i] = a[i] - b[i] | 0;\n  }\n\n  // multiplication\n  function M(o, a, b) {\n    var i,\n      j,\n      t = new Float64Array(31);\n    for (i = 0; i < 31; i++) t[i] = 0;\n    for (i = 0; i < 16; i++) {\n      for (j = 0; j < 16; j++) {\n        t[i + j] += a[i] * b[j];\n      }\n    }\n    for (i = 0; i < 15; i++) {\n      t[i] += 38 * t[i + 16];\n    }\n    for (i = 0; i < 16; i++) o[i] = t[i];\n    car25519(o);\n    car25519(o);\n  }\n\n  // squaring\n  function S(o, a) {\n    M(o, a, a);\n  }\n\n  // inversion\n  function inv25519(o, i) {\n    var c = gf();\n    var a;\n    for (a = 0; a < 16; a++) c[a] = i[a];\n    for (a = 253; a >= 0; a--) {\n      S(c, c);\n      if (a !== 2 && a !== 4) M(c, c, i);\n    }\n    for (a = 0; a < 16; a++) o[a] = c[a];\n  }\n  function pack25519(o, n) {\n    var i, j, b;\n    var m = gf(),\n      t = gf();\n    for (i = 0; i < 16; i++) t[i] = n[i];\n    car25519(t);\n    car25519(t);\n    car25519(t);\n    for (j = 0; j < 2; j++) {\n      m[0] = t[0] - 0xffed;\n      for (i = 1; i < 15; i++) {\n        m[i] = t[i] - 0xffff - (m[i - 1] >> 16 & 1);\n        m[i - 1] &= 0xffff;\n      }\n      m[15] = t[15] - 0x7fff - (m[14] >> 16 & 1);\n      b = m[15] >> 16 & 1;\n      m[14] &= 0xffff;\n      sel25519(t, m, 1 - b);\n    }\n    for (i = 0; i < 16; i++) {\n      o[2 * i] = t[i] & 0xff;\n      o[2 * i + 1] = t[i] >> 8;\n    }\n  }\n  function par25519(a) {\n    var d = new Uint8Array(32);\n    pack25519(d, a);\n    return d[0] & 1;\n  }\n  function vn(x, xi, y, yi, n) {\n    var i,\n      d = 0;\n    for (i = 0; i < n; i++) d |= x[xi + i] ^ y[yi + i];\n    return (1 & d - 1 >>> 8) - 1;\n  }\n  function crypto_verify_32(x, xi, y, yi) {\n    return vn(x, xi, y, yi, 32);\n  }\n  function neq25519(a, b) {\n    var c = new Uint8Array(32),\n      d = new Uint8Array(32);\n    pack25519(c, a);\n    pack25519(d, b);\n    return crypto_verify_32(c, 0, d, 0);\n  }\n  function pow2523(o, i) {\n    var c = gf();\n    var a;\n    for (a = 0; a < 16; a++) c[a] = i[a];\n    for (a = 250; a >= 0; a--) {\n      S(c, c);\n      if (a !== 1) M(c, c, i);\n    }\n    for (a = 0; a < 16; a++) o[a] = c[a];\n  }\n  function set25519(r, a) {\n    var i;\n    for (i = 0; i < 16; i++) r[i] = a[i] | 0;\n  }\n  function unpackneg(r, p) {\n    var t = gf(),\n      chk = gf(),\n      num = gf(),\n      den = gf(),\n      den2 = gf(),\n      den4 = gf(),\n      den6 = gf();\n    set25519(r[2], gf1);\n    unpack25519(r[1], p);\n    S(num, r[1]);\n    M(den, num, D);\n    Z(num, num, r[2]);\n    A(den, r[2], den);\n    S(den2, den);\n    S(den4, den2);\n    M(den6, den4, den2);\n    M(t, den6, num);\n    M(t, t, den);\n    pow2523(t, t);\n    M(t, t, num);\n    M(t, t, den);\n    M(t, t, den);\n    M(r[0], t, den);\n    S(chk, r[0]);\n    M(chk, chk, den);\n    if (neq25519(chk, num)) M(r[0], r[0], I);\n    S(chk, r[0]);\n    M(chk, chk, den);\n    if (neq25519(chk, num)) return -1;\n    if (par25519(r[0]) === p[31] >> 7) Z(r[0], gf0, r[0]);\n    M(r[3], r[0], r[1]);\n    return 0;\n  }\n\n  // ----\n\n  // Converts Ed25519 public key to Curve25519 public key.\n  // montgomeryX = (edwardsY + 1)*inverse(1 - edwardsY) mod p\n  function convertPublicKey(pk) {\n    var z = new Uint8Array(32),\n      q = [gf(), gf(), gf(), gf()],\n      a = gf(),\n      b = gf();\n    if (unpackneg(q, pk)) return null; // reject invalid key\n\n    var y = q[1];\n    A(a, gf1, y);\n    Z(b, gf1, y);\n    inv25519(b, b);\n    M(a, a, b);\n    pack25519(z, a);\n    return z;\n  }\n\n  // Converts Ed25519 secret key to Curve25519 secret key.\n  function convertSecretKey(sk) {\n    var d = new Uint8Array(64),\n      o = new Uint8Array(32),\n      i;\n    nacl.lowlevel.crypto_hash(d, sk, 32);\n    d[0] &= 248;\n    d[31] &= 127;\n    d[31] |= 64;\n    for (i = 0; i < 32; i++) o[i] = d[i];\n    for (i = 0; i < 64; i++) d[i] = 0;\n    return o;\n  }\n  function convertKeyPair(edKeyPair) {\n    var publicKey = convertPublicKey(edKeyPair.publicKey);\n    if (!publicKey) return null;\n    return {\n      publicKey: publicKey,\n      secretKey: convertSecretKey(edKeyPair.secretKey)\n    };\n  }\n  return {\n    convertPublicKey: convertPublicKey,\n    convertSecretKey: convertSecretKey,\n    convertKeyPair: convertKeyPair\n  };\n});","map":{"version":3,"names":["root","f","module","exports","require","ed2curve","nacl","Error","gf","init","i","r","Float64Array","length","gf0","gf1","D","I","car25519","o","c","Math","floor","sel25519","p","q","b","t","unpack25519","n","A","a","Z","M","j","S","inv25519","pack25519","m","par25519","d","Uint8Array","vn","x","xi","y","yi","crypto_verify_32","neq25519","pow2523","set25519","unpackneg","chk","num","den","den2","den4","den6","convertPublicKey","pk","z","convertSecretKey","sk","lowlevel","crypto_hash","convertKeyPair","edKeyPair","publicKey","secretKey"],"sources":["C:/Users/ROHAN/Desktop/projects/nft-marketplace/frontend/node_modules/ed2curve/ed2curve.js"],"sourcesContent":["/*\n * ed2curve: convert Ed25519 signing key pair into Curve25519\n * key pair suitable for Diffie-Hellman key exchange.\n *\n * Written by Dmitry Chestnykh in 2014. Public domain.\n */\n/* jshint newcap: false */\n(function(root, f) {\n  'use strict';\n  if (typeof module !== 'undefined' && module.exports) module.exports = f(require('tweetnacl'));\n  else root.ed2curve = f(root.nacl);\n}(this, function(nacl) {\n  'use strict';\n  if (!nacl) throw new Error('tweetnacl not loaded');\n\n  // -- Operations copied from TweetNaCl.js. --\n\n  var gf = function(init) {\n    var i, r = new Float64Array(16);\n    if (init) for (i = 0; i < init.length; i++) r[i] = init[i];\n    return r;\n  };\n\n  var gf0 = gf(),\n      gf1 = gf([1]),\n      D = gf([0x78a3, 0x1359, 0x4dca, 0x75eb, 0xd8ab, 0x4141, 0x0a4d, 0x0070, 0xe898, 0x7779, 0x4079, 0x8cc7, 0xfe73, 0x2b6f, 0x6cee, 0x5203]),\n      I = gf([0xa0b0, 0x4a0e, 0x1b27, 0xc4ee, 0xe478, 0xad2f, 0x1806, 0x2f43, 0xd7a7, 0x3dfb, 0x0099, 0x2b4d, 0xdf0b, 0x4fc1, 0x2480, 0x2b83]);\n\n  function car25519(o) {\n    var c;\n    var i;\n    for (i = 0; i < 16; i++) {\n      o[i] += 65536;\n      c = Math.floor(o[i] / 65536);\n      o[(i+1)*(i<15?1:0)] += c - 1 + 37 * (c-1) * (i===15?1:0);\n      o[i] -= (c * 65536);\n    }\n  }\n\n  function sel25519(p, q, b) {\n    var t, c = ~(b-1);\n    for (var i = 0; i < 16; i++) {\n      t = c & (p[i] ^ q[i]);\n      p[i] ^= t;\n      q[i] ^= t;\n    }\n  }\n\n  function unpack25519(o, n) {\n    var i;\n    for (i = 0; i < 16; i++) o[i] = n[2*i] + (n[2*i+1] << 8);\n    o[15] &= 0x7fff;\n  }\n\n  // addition\n  function A(o, a, b) {\n    var i;\n    for (i = 0; i < 16; i++) o[i] = (a[i] + b[i])|0;\n  }\n\n  // subtraction\n  function Z(o, a, b) {\n    var i;\n    for (i = 0; i < 16; i++) o[i] = (a[i] - b[i])|0;\n  }\n\n  // multiplication\n  function M(o, a, b) {\n    var i, j, t = new Float64Array(31);\n    for (i = 0; i < 31; i++) t[i] = 0;\n    for (i = 0; i < 16; i++) {\n      for (j = 0; j < 16; j++) {\n        t[i+j] += a[i] * b[j];\n      }\n    }\n    for (i = 0; i < 15; i++) {\n      t[i] += 38 * t[i+16];\n    }\n    for (i = 0; i < 16; i++) o[i] = t[i];\n    car25519(o);\n    car25519(o);\n  }\n\n  // squaring\n  function S(o, a) {\n    M(o, a, a);\n  }\n\n  // inversion\n  function inv25519(o, i) {\n    var c = gf();\n    var a;\n    for (a = 0; a < 16; a++) c[a] = i[a];\n    for (a = 253; a >= 0; a--) {\n      S(c, c);\n      if(a !== 2 && a !== 4) M(c, c, i);\n    }\n    for (a = 0; a < 16; a++) o[a] = c[a];\n  }\n\n  function pack25519(o, n) {\n    var i, j, b;\n    var m = gf(), t = gf();\n    for (i = 0; i < 16; i++) t[i] = n[i];\n    car25519(t);\n    car25519(t);\n    car25519(t);\n    for (j = 0; j < 2; j++) {\n      m[0] = t[0] - 0xffed;\n      for (i = 1; i < 15; i++) {\n        m[i] = t[i] - 0xffff - ((m[i-1]>>16) & 1);\n        m[i-1] &= 0xffff;\n      }\n      m[15] = t[15] - 0x7fff - ((m[14]>>16) & 1);\n      b = (m[15]>>16) & 1;\n      m[14] &= 0xffff;\n      sel25519(t, m, 1-b);\n    }\n    for (i = 0; i < 16; i++) {\n      o[2*i] = t[i] & 0xff;\n      o[2*i+1] = t[i] >> 8;\n    }\n  }\n\n  function par25519(a) {\n    var d = new Uint8Array(32);\n    pack25519(d, a);\n    return d[0] & 1;\n  }\n\n  function vn(x, xi, y, yi, n) {\n    var i, d = 0;\n    for (i = 0; i < n; i++) d |= x[xi + i] ^ y[yi + i];\n    return (1 & ((d - 1) >>> 8)) - 1;\n  }\n\n  function crypto_verify_32(x, xi, y, yi) {\n    return vn(x, xi, y, yi, 32);\n  }\n\n  function neq25519(a, b) {\n    var c = new Uint8Array(32), d = new Uint8Array(32);\n    pack25519(c, a);\n    pack25519(d, b);\n    return crypto_verify_32(c, 0, d, 0);\n  }\n\n  function pow2523(o, i) {\n    var c = gf();\n    var a;\n    for (a = 0; a < 16; a++) c[a] = i[a];\n    for (a = 250; a >= 0; a--) {\n      S(c, c);\n      if (a !== 1) M(c, c, i);\n    }\n    for (a = 0; a < 16; a++) o[a] = c[a];\n  }\n\n  function set25519(r, a) {\n    var i;\n    for (i = 0; i < 16; i++) r[i] = a[i] | 0;\n  }\n\n  function unpackneg(r, p) {\n    var t = gf(), chk = gf(), num = gf(),\n      den = gf(), den2 = gf(), den4 = gf(),\n      den6 = gf();\n\n    set25519(r[2], gf1);\n    unpack25519(r[1], p);\n    S(num, r[1]);\n    M(den, num, D);\n    Z(num, num, r[2]);\n    A(den, r[2], den);\n\n    S(den2, den);\n    S(den4, den2);\n    M(den6, den4, den2);\n    M(t, den6, num);\n    M(t, t, den);\n\n    pow2523(t, t);\n    M(t, t, num);\n    M(t, t, den);\n    M(t, t, den);\n    M(r[0], t, den);\n\n    S(chk, r[0]);\n    M(chk, chk, den);\n    if (neq25519(chk, num)) M(r[0], r[0], I);\n\n    S(chk, r[0]);\n    M(chk, chk, den);\n    if (neq25519(chk, num)) return -1;\n\n    if (par25519(r[0]) === (p[31] >> 7)) Z(r[0], gf0, r[0]);\n\n    M(r[3], r[0], r[1]);\n    return 0;\n  }\n\n  // ----\n\n  // Converts Ed25519 public key to Curve25519 public key.\n  // montgomeryX = (edwardsY + 1)*inverse(1 - edwardsY) mod p\n  function convertPublicKey(pk) {\n    var z = new Uint8Array(32),\n      q = [gf(), gf(), gf(), gf()],\n      a = gf(), b = gf();\n\n    if (unpackneg(q, pk)) return null; // reject invalid key\n\n    var y = q[1];\n\n    A(a, gf1, y);\n    Z(b, gf1, y);\n    inv25519(b, b);\n    M(a, a, b);\n\n    pack25519(z, a);\n    return z;\n  }\n\n  // Converts Ed25519 secret key to Curve25519 secret key.\n  function convertSecretKey(sk) {\n    var d = new Uint8Array(64), o = new Uint8Array(32), i;\n    nacl.lowlevel.crypto_hash(d, sk, 32);\n    d[0] &= 248;\n    d[31] &= 127;\n    d[31] |= 64;\n    for (i = 0; i < 32; i++) o[i] = d[i];\n    for (i = 0; i < 64; i++) d[i] = 0;\n    return o;\n  }\n\n  function convertKeyPair(edKeyPair) {\n    var publicKey = convertPublicKey(edKeyPair.publicKey);\n    if (!publicKey) return null;\n    return {\n      publicKey: publicKey,\n      secretKey: convertSecretKey(edKeyPair.secretKey)\n    };\n  }\n\n  return {\n    convertPublicKey: convertPublicKey,\n    convertSecretKey: convertSecretKey,\n    convertKeyPair: convertKeyPair,\n  };\n\n}));\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}