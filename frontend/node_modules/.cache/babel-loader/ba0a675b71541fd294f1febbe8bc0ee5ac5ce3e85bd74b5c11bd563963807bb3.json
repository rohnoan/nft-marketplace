{"ast":null,"code":"// src/constants.ts\nvar DEFAULT_BACKEND_URL = \"https://identityconnect.com\";\n\n// src/network.ts\nvar NetworkName = /* @__PURE__ */(NetworkName2 => {\n  NetworkName2[\"DEVNET\"] = \"devnet\";\n  NetworkName2[\"MAINNET\"] = \"mainnet\";\n  NetworkName2[\"TESTNET\"] = \"testnet\";\n  return NetworkName2;\n})(NetworkName || {});\n\n// src/types/pairing.ts\nvar PairingStatus = /* @__PURE__ */(PairingStatus2 => {\n  PairingStatus2[\"Finalized\"] = \"FINALIZED\";\n  PairingStatus2[\"Pending\"] = \"PENDING\";\n  return PairingStatus2;\n})(PairingStatus || {});\n\n// src/types/signingRequest.ts\nvar SigningRequestTypes = /* @__PURE__ */(SigningRequestTypes2 => {\n  SigningRequestTypes2[\"SIGN_AND_SUBMIT_TRANSACTION\"] = \"SIGN_AND_SUBMIT_TRANSACTION\";\n  SigningRequestTypes2[\"SIGN_MESSAGE\"] = \"SIGN_MESSAGE\";\n  SigningRequestTypes2[\"SIGN_TRANSACTION\"] = \"SIGN_TRANSACTION\";\n  return SigningRequestTypes2;\n})(SigningRequestTypes || {});\nvar SigningRequestStatus = /* @__PURE__ */(SigningRequestStatus2 => {\n  SigningRequestStatus2[\"APPROVED\"] = \"APPROVED\";\n  SigningRequestStatus2[\"CANCELLED\"] = \"CANCELLED\";\n  SigningRequestStatus2[\"INVALID\"] = \"INVALID\";\n  SigningRequestStatus2[\"PENDING\"] = \"PENDING\";\n  SigningRequestStatus2[\"REJECTED\"] = \"REJECTED\";\n  return SigningRequestStatus2;\n})(SigningRequestStatus || {});\n\n// src/types/wallet.ts\nvar WalletOSEnum = /* @__PURE__ */(WalletOSEnum2 => {\n  WalletOSEnum2[\"Android\"] = \"android\";\n  WalletOSEnum2[\"IdentityConnect\"] = \"ic\";\n  WalletOSEnum2[\"Linux\"] = \"linux\";\n  WalletOSEnum2[\"Macos\"] = \"osx\";\n  WalletOSEnum2[\"Windows\"] = \"win\";\n  WalletOSEnum2[\"iOS\"] = \"ios\";\n  return WalletOSEnum2;\n})(WalletOSEnum || {});\nvar WalletPlatformEnum = /* @__PURE__ */(WalletPlatformEnum2 => {\n  WalletPlatformEnum2[\"BraveExtension\"] = \"brave-extension\";\n  WalletPlatformEnum2[\"ChromeExtension\"] = \"chrome-extension\";\n  WalletPlatformEnum2[\"FirefoxExtension\"] = \"firefox-extension\";\n  WalletPlatformEnum2[\"IcDappWallet\"] = \"ic-dapp-wallet\";\n  WalletPlatformEnum2[\"KiwiExtension\"] = \"kiwi-extension\";\n  WalletPlatformEnum2[\"NativeApp\"] = \"native-app\";\n  WalletPlatformEnum2[\"OperaExtension\"] = \"opera-extension\";\n  WalletPlatformEnum2[\"SafariExtension\"] = \"safari-extension\";\n  return WalletPlatformEnum2;\n})(WalletPlatformEnum || {});\nexport { DEFAULT_BACKEND_URL, NetworkName, PairingStatus, SigningRequestStatus, SigningRequestTypes, WalletOSEnum, WalletPlatformEnum };","map":{"version":3,"names":["DEFAULT_BACKEND_URL","NetworkName","NetworkName2","PairingStatus","PairingStatus2","SigningRequestTypes","SigningRequestTypes2","SigningRequestStatus","SigningRequestStatus2","WalletOSEnum","WalletOSEnum2","WalletPlatformEnum","WalletPlatformEnum2"],"sources":["C:\\Users\\ROHAN\\Desktop\\projects\\nft-marketplace\\frontend\\node_modules\\@identity-connect\\api\\src\\constants.ts","C:\\Users\\ROHAN\\Desktop\\projects\\nft-marketplace\\frontend\\node_modules\\@identity-connect\\api\\src\\network.ts","C:\\Users\\ROHAN\\Desktop\\projects\\nft-marketplace\\frontend\\node_modules\\@identity-connect\\api\\src\\types\\pairing.ts","C:\\Users\\ROHAN\\Desktop\\projects\\nft-marketplace\\frontend\\node_modules\\@identity-connect\\api\\src\\types\\signingRequest.ts","C:\\Users\\ROHAN\\Desktop\\projects\\nft-marketplace\\frontend\\node_modules\\@identity-connect\\api\\src\\types\\wallet.ts"],"sourcesContent":["// Copyright © Aptos\n// SPDX-License-Identifier: Apache-2.0\n\nexport const DEFAULT_BACKEND_URL = 'https://identityconnect.com';\n","// Copyright © Aptos\n// SPDX-License-Identifier: Apache-2.0\n\nexport enum NetworkName {\n  DEVNET = 'devnet',\n  MAINNET = 'mainnet',\n  TESTNET = 'testnet',\n}\n","// Copyright © Aptos\n// SPDX-License-Identifier: Apache-2.0\n\nimport { AccountData } from './account';\nimport { RegisteredDappDataBase } from './dapp';\nimport { ConnectedWalletData } from './wallet';\nimport { DappSpecificWallet } from './dappSpecificWallet';\n\nexport enum PairingStatus {\n  Finalized = 'FINALIZED',\n  Pending = 'PENDING',\n}\n\nexport interface BasePairingData {\n  createdAt: Date;\n  dappEd25519PublicKeyB64: string;\n  dappSpecificWallet?: DappSpecificWallet;\n  dappSpecificWalletId?: string;\n  expiresAt: Date;\n  id: string;\n  maxDappSequenceNumber: number;\n  maxWalletSequenceNumber: number;\n  registeredDapp: RegisteredDappDataBase;\n  registeredDappId: string;\n  status: PairingStatus;\n  updatedAt: Date;\n}\n\nexport interface NewPairingData extends BasePairingData {\n  maxDappSequenceNumber: -1;\n  maxWalletSequenceNumber: -1;\n  status: PairingStatus.Pending;\n}\n\nexport interface BaseFinalizedPairingData extends BasePairingData {\n  account: AccountData;\n  accountId: string;\n  status: PairingStatus.Finalized;\n  walletName: string;\n}\n\nexport interface AnonymousPairingData extends BaseFinalizedPairingData {\n  anonymousWallet: ConnectedWalletData;\n  anonymousWalletId: string;\n}\n\nexport type FinalizedPairingData = BaseFinalizedPairingData | AnonymousPairingData;\nexport type PairingData = NewPairingData | FinalizedPairingData;\n","// Copyright © Aptos\n// SPDX-License-Identifier: Apache-2.0\n\nimport { RegisteredDappDataBase } from './dapp';\n\n// region Duplicated from crypto to prevent dependency cycle\n\nexport type SerializedEncryptionResult = {\n  nonceB64: string;\n  securedB64: string;\n};\n\nexport type SecuredEnvelopeTransport = {\n  encryptedPrivateMessage: SerializedEncryptionResult;\n  messageSignature: string;\n  serializedPublicMessage: string;\n};\n\n// endregion\n\nexport enum SigningRequestTypes {\n  SIGN_AND_SUBMIT_TRANSACTION = 'SIGN_AND_SUBMIT_TRANSACTION',\n  SIGN_MESSAGE = 'SIGN_MESSAGE',\n  SIGN_TRANSACTION = 'SIGN_TRANSACTION',\n}\n\nexport enum SigningRequestStatus {\n  APPROVED = 'APPROVED',\n  CANCELLED = 'CANCELLED',\n  INVALID = 'INVALID',\n  PENDING = 'PENDING',\n  REJECTED = 'REJECTED',\n}\n\nexport interface SigningRequestData {\n  apiVersion: string;\n  createdAt: Date;\n  id: string;\n  networkName: string | null;\n  pairing: {\n    registeredDapp: RegisteredDappDataBase;\n  };\n  pairingId: string;\n  requestEnvelope: SecuredEnvelopeTransport;\n  requestType: SigningRequestTypes;\n  responseEnvelope?: SecuredEnvelopeTransport;\n  status: SigningRequestStatus;\n}\n","// Copyright © Aptos\n// SPDX-License-Identifier: Apache-2.0\n\nimport type { AccountData } from './account';\nimport type { AnonymousPairingData } from './pairing';\nimport { DappSpecificWallet } from './dappSpecificWallet';\n\nexport enum WalletOSEnum {\n  Android = 'android',\n  IdentityConnect = 'ic',\n  Linux = 'linux',\n  Macos = 'osx',\n  Windows = 'win',\n  iOS = 'ios',\n}\n\nexport enum WalletPlatformEnum {\n  BraveExtension = 'brave-extension',\n  ChromeExtension = 'chrome-extension',\n  FirefoxExtension = 'firefox-extension',\n  /// Reserved for IC full custody\n  IcDappWallet = 'ic-dapp-wallet',\n  KiwiExtension = 'kiwi-extension',\n  NativeApp = 'native-app',\n  OperaExtension = 'opera-extension',\n  SafariExtension = 'safari-extension',\n}\n\nexport type WalletOS = `${WalletOSEnum}`;\nexport type WalletPlatform = `${WalletPlatformEnum}`;\n\nexport interface BaseWalletData {\n  createdAt: Date;\n  dappSpecificWallet?: DappSpecificWallet;\n  dappSpecificWalletId?: string;\n  icEd25519PublicKeyB64: string;\n  id: string;\n  updatedAt: Date;\n}\n\nexport interface NewWalletData extends BaseWalletData {\n  walletEd25519PublicKeyB64: null;\n}\n\nexport interface BaseConnectedWalletData extends BaseWalletData {\n  accounts: AccountData[];\n  deviceIdentifier: string;\n  platform: WalletPlatform;\n  platformOS: WalletOS;\n  userSubmittedAlias?: string;\n  walletEd25519PublicKeyB64: string;\n  walletName: string;\n}\n\nexport interface AuthenticatedWalletData extends BaseConnectedWalletData {\n  anonymousPairing: null;\n  user: { id: string; username: string };\n  userId: string;\n}\n\nexport interface AnonymousWalletData extends BaseConnectedWalletData {\n  anonymousPairing: AnonymousPairingData;\n  userId: null;\n}\n\nexport type ConnectedWalletData = AuthenticatedWalletData | AnonymousWalletData;\n\nexport type WalletData = NewWalletData | ConnectedWalletData;\n"],"mappings":";AAGO,IAAMA,mBAAA,GAAsB;;;ACA5B,IAAKC,WAAA,GAAL,gBAAKC,YAAA,IAAL;EACLA,YAAA,aAAS;EACTA,YAAA,cAAU;EACVA,YAAA,cAAU;EAHA,OAAAA,YAAA;AAAA,GAAAD,WAAA;;;ACKL,IAAKE,aAAA,GAAL,gBAAKC,cAAA,IAAL;EACLA,cAAA,gBAAY;EACZA,cAAA,cAAU;EAFA,OAAAA,cAAA;AAAA,GAAAD,aAAA;;;ACYL,IAAKE,mBAAA,GAAL,gBAAKC,oBAAA,IAAL;EACLA,oBAAA,kCAA8B;EAC9BA,oBAAA,mBAAe;EACfA,oBAAA,uBAAmB;EAHT,OAAAA,oBAAA;AAAA,GAAAD,mBAAA;AAML,IAAKE,oBAAA,GAAL,gBAAKC,qBAAA,IAAL;EACLA,qBAAA,eAAW;EACXA,qBAAA,gBAAY;EACZA,qBAAA,cAAU;EACVA,qBAAA,cAAU;EACVA,qBAAA,eAAW;EALD,OAAAA,qBAAA;AAAA,GAAAD,oBAAA;;;ACnBL,IAAKE,YAAA,GAAL,gBAAKC,aAAA,IAAL;EACLA,aAAA,cAAU;EACVA,aAAA,sBAAkB;EAClBA,aAAA,YAAQ;EACRA,aAAA,YAAQ;EACRA,aAAA,cAAU;EACVA,aAAA,UAAM;EANI,OAAAA,aAAA;AAAA,GAAAD,YAAA;AASL,IAAKE,kBAAA,GAAL,gBAAKC,mBAAA,IAAL;EACLA,mBAAA,qBAAiB;EACjBA,mBAAA,sBAAkB;EAClBA,mBAAA,uBAAmB;EAEnBA,mBAAA,mBAAe;EACfA,mBAAA,oBAAgB;EAChBA,mBAAA,gBAAY;EACZA,mBAAA,qBAAiB;EACjBA,mBAAA,sBAAkB;EATR,OAAAA,mBAAA;AAAA,GAAAD,kBAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}